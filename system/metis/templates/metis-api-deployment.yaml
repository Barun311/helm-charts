{{- if $.Values.metisAPI.enabled }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: metis-api
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: metis
    helm.sh/chart: {{ include "metis.chart" $ }}
    app.kubernetes.io/instance: metis-{{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: "api"
    alert-service: "metis"
    alert-tier: {{ required "$.Values.backup_v2.alerts.tier missing" $.Values.backup_v2.alerts.tier }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: metis-api
      app.kubernetes.io/instance: metis-api-{{ .Release.Name }}
      app.kubernetes.io/component: "api"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: metis-api
        app.kubernetes.io/instance: metis-api-{{ .Release.Name }}
        app.kubernetes.io/component: "api"
      annotations:
        checksum/config: {{ include ( print $.Template.BasePath "/metis-api-configmap.yaml" ) . | sha256sum }}
        checksum/secret: {{ include ( print $.Template.BasePath "/metis-secrets.yaml" ) . | sha256sum }}
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                  - "metisdb-mariadb"
            topologyKey: kubernetes.io/hostname
      containers:
      - name: metis
        image: "{{ required ".Values.global.registry variable missing" .Values.global.registry }}/{{ .Values.metisAPI.image }}:{{ .Values.metisAPI.imageTag }}"
        ports:
        - name: http
          containerPort: {{ .Values.metisAPI.port}}
          protocol: TCP
        resources:
          requests:
            memory: 25Mi
            cpu: 10m
          limits:
            memory: 100Mi
            cpu: 50m
        env:
          - name: DB_PASSWD
            valueFrom:
              secretKeyRef:
                name: metis-secrets
                key: metisAdminPW
          {{ include "os_environment" $ | indent 10 }}

        volumeMounts:
          - name: metis-api-etc
            mountPath: /etc/metis
            readOnly: true
      volumes:
        - name: metis-api-etc
          configMap:
            name: metis-api-etc
{{- end }}
