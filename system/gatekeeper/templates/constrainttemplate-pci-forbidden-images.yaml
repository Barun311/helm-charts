apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata:
  name: gkpciforbiddenimages
spec:
  crd:
    spec:
      names:
        kind: GkPCIForbiddenImages
      validation:
        # Schema for the `parameters` field
        openAPIV3Schema:
          type: object
          properties:
            patterns:
              type: array
              items:
                description: regex pattern
                type: string
              minItems: 0

  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package pciforbiddenimages

        violation[{"msg": msg}] {
          obj := input.review.object
          obj.kind == "Pod"
          container := obj.spec.containers[_]

          pattern := input.parameters.patterns[_]
          regex.match(pattern, container.image)

          msg := sprintf(
            "support-group=%s,service=%s: container %q uses forbidden image: %s",
            [obj.metadata.labels["support-group"], obj.metadata.labels["service"], container.name, container.image]
          )
        }
