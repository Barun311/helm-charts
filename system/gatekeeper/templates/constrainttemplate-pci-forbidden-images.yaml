apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata:
  name: gkpciforbiddenimages
spec:
  crd:
    spec:
      names:
        kind: GkPCIForbiddenImages
      validation:
        # Schema for the `parameters` field
        openAPIV3Schema:
          type: object
          properties:
            patterns:
              type: array
              items:
                description: regex pattern
                type: string
              minItems: 0

  targets:
    - target: admission.k8s.gatekeeper.sh
      libs:
        - |
          {{ .Files.Get "lib/add-support-labels.rego" | nindent 10 }}
      rego: |
        package pciforbiddenimages
        import data.lib.add_support_labels

        iro := input.review.object

        violation[{"msg": msg}] {
          iro.kind == "Pod"
          container := iro.spec.containers[_]

          pattern := input.parameters.patterns[_]
          regex.match(pattern, container.image)

          msgBase := sprintf("container %q uses forbidden image: %s", [container.name, container.image])
          msg := add_support_labels.from_k8s_object(iro, msgBase)
        }
