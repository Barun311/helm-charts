{{/* we only need this policy in baremetal. Services in other clusters can scale freely */}}
{{- if eq .Values.cluster_type "baremetal" -}}

apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata:
  name: gkhighcpurequests
spec:
  crd:
    spec:
      names:
        kind: GkHighCPURequests
      validation:
        openAPIV3Schema:
          properties: {}

  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package highcpurequests

        max_cpu := 6

        canonify_cpu(orig) = new {
          is_number(orig)
          new := orig
        }
        canonify_cpu(orig) = new {
          not is_number(orig)
          not endswith(orig, "m")
          regex.match(`^[0-9]*\.?[0-9]+$`, orig)
          new := to_number(orig)
        }
        canonify_cpu(orig) = new {
          not is_number(orig)
          endswith(orig, "m")
          new := to_number(replace(orig, "m", "")) / 1000
        }

        cpu_requests = [canonify_cpu(c) | c = input.review.object.spec.containers[_].resources.requests.cpu]

        violation[{"msg": msg}] {
          input.review.object.kind == "Pod"
          total_cpu := sum(cpu_requests)
          total_cpu > max_cpu
          msg := sprintf("requests %v CPU in total", [total_cpu])
        }

{{- end -}}
