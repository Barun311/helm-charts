apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch-hermes
  namespace: hermes
  labels:
    system: openstack
    service: audit
    component: elasticsearch
    role: master
spec:
  serviceName: elasticsearch-hermes
  replicas: {{.Values.replicas}}
  selector:
    matchLabels:
      component: elasticsearch
      role: master
  template:
    metadata:
      labels:
        component: elasticsearch
        role: master
      annotations:
        checksum/configmap.yaml: {{ include  (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/elasticsearch.yml: {{ include  (print $.Template.BasePath "/_elasticsearch.yml.tpl") . | sha256sum }}
        pod.alpha.kubernetes.io/initialized: "true"
    spec:
      nodeSelector:
        zone: farm
      volumes:
        - name: elasticsearch-hermes-etc
          configMap:
            name: elasticsearch-hermes-etc
      initContainers:
      - name: sysctl
        image: {{ .Values.global.dockerHubMirror }}/library/busybox:latest
        imagePullPolicy: IfNotPresent
        #command: ['sysctl', '-w', 'vm.max_map_count=262144']
        command:
          - /bin/sh
          - -c
          - chown -R 1000:1000 /data &&
            mkdir -p /data/es-config &&
            chown -R 1000:1000 /data/es-config &&
            cp /elasticsearch-hermes-etc/* /data/es-config &&
            mkdir -p /data/es-config/scripts &&
            mkdir -p /data/snapshots &&
            chown -R 1000:1000 /data/snapshots &&
            touch /data/es-config/elasticsearch.keystore && rm /data/es-config/elasticsearch.keystore &&
            sysctl -w vm.max_map_count=262144
        securityContext:
          runAsUser: 0
          privileged: true
      containers:
        - name: elasticsearch-hermes
          image: {{.Values.global.elasticCoMirror}}/elasticsearch/elasticsearch:{{.Values.hermes_image_version_elasticsearch}}
          imagePullPolicy: IfNotPresent
          #command: ["/usr/local/bin/dumb-init", "/bin/bash", "-c", "while true; do sleep 1000; done"]
          #command: ["/usr/local/bin/dumb-init", "/bin/bash", "/es-etc/elasticsearch-start"]
          command: [elasticsearch]
          resources:
{{ toYaml .Values.resources | indent 12 }}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KUBERNETES_CA_CERTIFICATE_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_MASTER
              value: "true"
            - name: NODE_INGEST
              value: "true"
            - name: NODE_DATA
              value: "true"
            - name: HTTP_ENABLE
              value: "true"
            - name: ES_JAVA_OPTS
              value: "-Dlog4j2.formatMsgNoLookups=true -XX:MaxRAM=7g -XX:MaxGCPauseMillis=500 -Xms5g -Xmx5g"
            - name: READONLYREST_ENABLE
              value: "true"
            - name: ES_JVM_OPTS
              value: "/data/es-config/jvm.options"
            - name: ES_PATH_CONF
              value: "/data/es-config/"
          securityContext:
            capabilities:
              add:
                - IPC_LOCK
                - SYS_RESOURCE
          volumeMounts:
            - mountPath: /data
              name: elasticsearch-hermes
            - mountPath: /es-etc
              name: elasticsearch-hermes-etc
          ports:
            - name: transport
              containerPort: {{.Values.cluster_port}}
              protocol: TCP
            - name: noscheduleport
              hostPort: {{.Values.noschedule_port}}
              hostIP: 127.0.0.1
              containerPort: {{.Values.noschedule_port}}
            - name: http
              containerPort: {{.Values.http_port}}
              protocol: TCP
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-hermes
      namespace: hermes
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{.Values.data_volumesize}}
