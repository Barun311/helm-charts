{{- if .Values.enabled }}
{{- $values := .Values -}}

{{- range $i, $prober := .Values.probers -}}
{{ if ne $i 0 }}---{{ end }}

kind: Deployment
apiVersion: apps/v1

metadata:
  name: cloudprober-{{$prober.zone}}
  labels:
    app: cloudprober

spec:
  revisionHistoryLimit: {{ $values.revisionHistoryLimit }}
  replicas: {{ $values.replicaCount }}
  selector:
    matchLabels:
      name: cloudprober-{{$prober.zone}}
  template:
    metadata:
      labels:
        name: cloudprober-{{$prober.zone}}
        app: cloudprober
        src_zone: {{$prober.zone}}
        src_ip: {{$prober.ip}}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") $ | sha256sum }}
    spec:
      nodeSelector:
        failure-domain.beta.kubernetes.io/zone: {{$prober.zone}}
      volumes:
        - name: cloudprober
          configMap:
            name: cloudprober

      containers:
        - name: prober
          image: {{$values.global.dockerHubMirror}}/{{ required ".Values.image.name variable missing" $values.image.name }}:{{ required ".Values.image.tag variable missing" $values.image.tag }}
          imagePullPolicy: {{ required ".Values.image.pullPolicy variable missing" $values.image.pullPolicy }}
          args: [
            "--config_file","/cfg/cloudprober.cfg",
            "--logtostderr"
          ]
          volumeMounts:
          - name: cloudprober
            mountPath: /cfg
          ports:
          - name: metrics
            containerPort: 9313
          - name: web
            containerPort: 80
          env:
          - name: CLOUDPROBER_PORT
            value: "9313"
          livenessProbe:
            httpGet:
              path: /metrics
              port: metrics
            timeoutSeconds: 10
            periodSeconds: 15
          readinessProbe:
            httpGet:
              path: /config
              port: metrics
            timeoutSeconds: 5
            periodSeconds: 15

---
{{ end -}}
{{ end -}}
